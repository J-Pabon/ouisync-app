<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools">
  <uses-permission android:name="android.permission.INTERNET"/> 
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
  <uses-permission android:name="android.permission.CAMERA"/>
  <!-- Continue running when in background. More info:
         https://pub.dev/packages/flutter_background -->
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
  <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"/>

  <!-- needed by flutter_email_sender -->
  <queries>
    <intent>
      <action android:name="android.intent.action.SENDTO" />
      <data android:scheme="mailto" />
    </intent>
  </queries>

  <uses-sdk tools:overrideLibrary="design.codeux.biometric_storage" />

  <application android:label="@string/app_name" android:requestLegacyExternalStorage="true" android:allowBackup="false" android:fullBackupContent="false" android:icon="@mipmap/ic_launcher" android:roundIcon="@mipmap/ic_launcher_round">
    <provider
      tools:replace="android:authorities"
      android:name="ie.equalit.ouisync_plugin.PipeProvider"
      android:authorities="${applicationId}.pipe"
      android:exported="true"/>
    <!--
      Regarding `launchMode="singleTask"`: when the user wants to "share"
      files into Ouisync, we don't want to start a new task because then
      all the repositories would be locked then they would need to
      re-unlock them if they unlocked them previously.
    -->
    <activity android:name=".MainActivity" android:launchMode="singleTask" android:exported="true" android:theme="@style/LaunchTheme" android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode" android:hardwareAccelerated="true" android:windowSoftInputMode="adjustResize">
      <!--
        Specifies an Android theme to apply to this Activity as soon as the Android process has
        started. This theme is visible to the user while the Flutter UI initializes. After that,
        this theme continues to determine the Window background behind the Flutter UI.
      -->
      <meta-data android:name="io.flutter.embedding.android.NormalTheme" android:resource="@style/NormalTheme"/>
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>
      <!-- Receive share intent -->
      <intent-filter>
        <action android:name="android.intent.action.SEND"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="*/*"/>
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.SEND_MULTIPLE"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <data android:mimeType="*/*"/>
      </intent-filter>
      <!-- Open share tokens -->
      <!-- https://developer.android.com/training/app-links#android-app-links -->
      <intent-filter android:autoVerify="true">
        <action android:name="android.intent.action.VIEW"/>
        <category android:name="android.intent.category.DEFAULT"/>
        <category android:name="android.intent.category.BROWSABLE"/>
        <data android:scheme="https" android:host="ouisync.net" android:pathPrefix="/r"/>
      </intent-filter>
    </activity>
    <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
    <meta-data android:name="flutterEmbedding" android:value="2"/>
  </application>
</manifest>