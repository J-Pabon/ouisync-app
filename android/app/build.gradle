def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    lintOptions {
        checkReleaseBuilds false
    }

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor-type"

    productFlavors {
        vanilla {
            dimension "flavor-type"
            applicationId "org.equalitie.ouisync"
            resValue "string", "app_name", "OuiSync"
        }
        analytics {
            dimension "flavor-type"
            applicationId "org.equalitie.ouisync"
            resValue "string", "app_name", "OuiSync"
        }
        development {
            dimension "flavor-type"
            applicationId "org.equalitie.ouisync.dev"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "OuiSync-Dev"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----


      compileSdkVersion 32
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.equalitie.ouisync"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            if (System.getenv("NO_SIGN") != "true") {
                signingConfig signingConfigs.debug
            }
        }
        debug {
            android.packagingOptions.doNotStrip '**.so'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
