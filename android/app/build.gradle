plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def properties = new Properties()
rootProject.file("local.properties").withInputStream { properties.load(it) }

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('../secrets/android/key.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile.withInputStream { keystoreProperties.load(it) }
}

android {
    namespace = "org.equalitie.ouisync"
    compileSdk = 34
    ndkVersion = "27.0.12077973"

    // Fix for:
    //
    // Inconsistent JVM-target compatibility detected for tasks 'compileDebugJavaWithJavac'
    // (1.8) and 'compileDebugKotlin' (17).
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    lint {
        checkReleaseBuilds false
        disable 'InvalidPackage'
    }

    // Suffix to append to the application id, name and version. This allows installing multiple
    // versions of the app on the same device (e.g., production and development).
    def appSuffix = System.getenv("APP_SUFFIX") ?: properties.getProperty("app.suffix")

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        def appId = "org.equalitie.ouisync"

        applicationId = appId
        resValue "string", "app_name", "Ouisync"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 21
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled = true

        if (appSuffix != null) {
            applicationIdSuffix = ".$appSuffix"
            versionNameSuffix = "-$appSuffix"
            resValue "string", "app_name", "Ouisync ${appSuffix}"
        }
    }

    signingConfigs {
        release {   
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }

        debug {
            android.packagingOptions.doNotStrip "**.so"
        }
    }
}

flutter {
    source = "../.."
}
