name: CI

on:
  push:
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [master]

jobs:
  build_and_test:
    name: build and test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name: [android, linux, windows]
        include:
          - name: android
            os: ubuntu-latest
            env:
              OUISYNC_LIB: ouisync-plugin/ouisync/target/debug/libouisync_ffi.so
            target: aarch64-linux-android
            ndk:
              version: r25c
              abi: arm64-v8a
            build-args: apk --target-platform android-arm64

          - name: linux
            os: ubuntu-latest
            env:
              OUISYNC_LIB: ouisync-plugin/ouisync/target/debug/libouisync_ffi.so
            # TODO: enable analysis
            # analyze: true
            build-args: linux

          - name: windows
            os: windows-latest
            env:
              # Install Dokan2.dll to where `flutter test` can find it
              DOKAN_DLL_OUTPUT_PATH: C:\Windows\System32
              OUISYNC_LIB: ouisync-plugin\ouisync\target\debug\ouisync_ffi.dll
            dokan-version: 2.0.6.1000
            build-args: windows

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Add rust target
        run: rustup target add ${{ matrix.target }}
        if: matrix.target != ''


      - name: Install build dependencies (linux)
        run: |
          sudo apt-get install libappindicator3-dev   \
                               libfuse-dev            \
                               libgtk-3-dev           \
                               libwebkit2gtk-4.1-dev  \
                               ninja-build
        if: matrix.name == 'linux'

      - name: Install build dependencies (android)
        run: sudo apt-get install libfuse-dev
        if: matrix.name == 'android'

      - name: Install Android NDK
        uses: nttld/setup-ndk@v1
        with:
            ndk-version: ${{ matrix.ndk.version }}
        if: matrix.ndk.version != ''

      - name: Set NDK ABI filter
        run: echo "ndk.abiFilters=${{ matrix.ndk.abi }}" >> android/local.properties
        if: matrix.ndk.abi != ''

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Run Flutter doctor
        run: flutter doctor -v

      - name: Get Flutter packages
        run:  dart pub get

      - name: Generate the Dart bindings for the Ouisync library
        run: |
          pushd ouisync-plugin
          pushd ouisync
          cargo run --package ouisync-bindgen --bin bindgen -- --language dart
          popd
          flutter pub run ffigen
          popd

      - name: Analyze
        run: |
          pushd lib
          flutter analyze
          popd

          pushd test
          flutter analyze
          popd

          pushd util
          flutter analyze
          popd

        if: matrix.analyze

      - name: Build Ouisync library for tests
        run: |
         cd ouisync-plugin/ouisync
         cargo build --package ouisync-ffi

      - name: Run tests
        run:
          flutter test

      - name: Build Ouisync app
        run: flutter build ${{ matrix.build-args }}


